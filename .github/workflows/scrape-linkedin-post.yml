name: Scrape LinkedIn Post

on:
  workflow_dispatch:
    inputs:
      job_id:
        description: 'Job ID from database'
        required: true
        type: string
      linkedin_url:
        description: 'LinkedIn post URL to scrape'
        required: true
        type: string
      user_id:
        description: 'User ID who submitted the post'
        required: true
        type: string

jobs:
  scrape-post:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run LinkedIn scraping
      env:
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
        PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
      run: |
        node scrape-script.js "${{ github.event.inputs.job_id }}" "${{ github.event.inputs.linkedin_url }}" "${{ github.event.inputs.user_id }}"